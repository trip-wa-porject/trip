FORMAT: 1A
HOST: https://us-central1-wa-project-mountain.cloudfunctions.net

# wa-project

This is for wa-project-mountain api documentation

## searchTrips [/searchTrips]

### List All Trips [POST]

+ Request (application/json)

        {
          1. 開始日期
          // filter all trip > startDate
          startDate?: number
          
          2. 結束日期  
          // filter all trip < startDate
          endDate?: number
          
          3. 等級
          //levels = ['A', 'B', 'C']
          levels?: string[]
          
          4. 類型
          // types = ['高山步道', '郊山步道', '中級山步道']
          types?: string[]
          
          5. 地區
          // regions = [
              '南投縣',
              '台北市',
              '台中市',
              '台南市',
              '高雄市',
              '台東縣',
              '雲林縣',
              '嘉義縣',
              '新北市',
              '桃園市',
              '基隆市',
              '新竹市',
              '花蓮縣',
              '苗栗縣',
              '彰化縣',
              '屏東縣',
              '宜蘭縣',
              '澎湖縣'
            ]
          regions?: string[]
          
          6. 價錢區間
          /*
          0 -> 0 ~ 3000
          1 -> 3000 ~ 5000
          2 -> 5000 ~ 7000
          3 -> 7000 ~ 10000
          4 -> 10000 以上
          */
          price_intervals?: number[]
          
          7. 天數
          /*
           1 -> 一天內
           2 -> 2天內
           3 -> 3天內
           4 -> 3天以上
          */
          day_interval?: 1 | 2 | 3 | 4
          
        }

+ Response 200 (application/json)

        [
            {
                  tripId: string
                  title: string
                  startDate: number
                  endDate: number
                  area: {
                    city: string
                    county: string
                  }[]
                  type: string
                  level: 'A' | 'B' | 'C'
                  roadImage: string
                  price: number
                  memberPrice: number
                  url: string
                  applicants: string[]
                  limitation: number
                  images: string[]
                  information: {
                        applyStart: number
                        applyEnd: number
                        applyWay: string
                        gatherPlace: string
                        gatherTime: number
                        transportationWay: string
                        transportationInfo: string
                        preDepartureMeetingDate: number
                        preDepartureMeetingPlace: string
                        memo: string
                        leader: string
                        guides: string[]
                        note: string
                        arriveSite: string
                  }
                  status: number
            }
        ]
        
## searchTrip [/searchTrip]

### Get one Trip [POST]

+ Request (application/json)

        {
            tripId: string
        }

+ Response 200 (application/json)

        {
                  tripId: string
                  title: string
                  startDate: number
                  endDate: number
                  area: {
                    city: string
                    county: string
                  }[]
                  type: string
                  level: 'A' | 'B' | 'C'
                  roadImage: string
                  price: number
                  memberPrice: number
                  url: string
                  applicants: string[]
                  limitation: number
                  images: string[]
                  information: {
                        applyStart: number
                        applyEnd: number
                        applyWay: string
                        gatherPlace: string
                        gatherTime: number
                        transportationWay: string
                        transportationInfo: string
                        preDepartureMeetingDate: number
                        preDepartureMeetingPlace: string
                        memo: string
                        leader: string
                        guides: string[]
                        note: string
                        arriveSite: string
                  }
                  status: number
            }

+ Response 400 (application/json)
        
        // Not contains tripId
        
        "error": {
            "message": "must containes tripId for search",
            "status": "INVALID_ARGUMENT"
        }
        
+ Response 401 (application/json)

        // typeof tripId illegal
        "error": {
            "message": "type of tripId illegal",
            "status": "INVALID_ARGUMENT"
        }
        
+ Response 404 (application/json)

        // trip doesn't exist
        "error": {
            "message": "This trip doesn't exist",
            "status": "NOT_FOUND"
        }

## createUser [/createUser]

### Create a user [POST]

+ Request (application/json)

        // UI 上所有都是必填
        {
          userId: string
          idno: string
          email: string
          name: string
          mobile: string
          emergentContactor: string
          emergentContactTel: string
          contactorRelationship: string
          sexual: number
          address: string
          birth: string
          member: number
          agreements?: {}
        }
+ Response 200 (application/json) 

        {
            userId: string
        }

+ Response 400 (application/json) 

        
        // invalid-argument -> data not enough
        {
            message: 'These keys need complemnet: ${checker.join(', ')}'
        }
        
+ Response 409 (application/json) 
        
        // idno or email duplicated
        {
            message: 'This idno or emial already exist'
        }
        

## getUserInfo [/getUserInfo]

### get one user info [POST]

+ Request 200 (application/json)

        {
            userId: string
        }

+ Response 200 (application/json)

        {
          userId: string
          idno: string
          email: string
          name: string
          mobile: string
          emergentContactor: string
          emergentContactTel: string
          contactorRelationship: string
          sexual: number
          address: string
          birth: string
          member: number
          createDate: number,
          updateDate: number,
          agreements: { version_1: [1, 1, 1, 1] },
          registerTrips: []
        }

+ Response 409 (application/json) 

        {
            message: "This user doesn't exist"
        }
        
## createRegister [/createRegister]

### create a register [POST]

+ Request 200 (application/json)

        {
            userId: string,
            tripId: string,
        }

+ Response 200 (application/json)

        { 
            registerId: string 
        }

+ Response 400 (application/json) 

        
        // invalid-argument -> data not enough
        {
            message: 'lack of tripId or userId'
        }

+ Response 409 (application/json) 

        {
            message: "This trip or user doesn't exist"
        }

+ Response 500 (application/json) 

        {
            message: "Server Error"
        }

        
## updateRegister [/updateRegister]

### update a register [POST]

+ Request 200 (application/json)

        {
            userId: string,
            status: number,
            paymentInfo: Payment
        }

+ Response 200 (application/json)

        { 
            status: 'ok' 
        }

+ Response 400 (application/json) 

        
        // invalid-argument -> data not enough
        {
            message: 'lack of userId, status, paymentInfo'
        }

+ Response 409 (application/json) 

        {
            message: "This register doesn't exist"
        }
        
## getUserRegister [/getUserRegister]

### Get user's registers [POST]

+ Request 200 (application/json)

        {
            userId: string,
        }

+ Response 200 (application/json)

        [
            {
                tripInfo: Trip
                tripId: string
                userId: string
                paymentExpireDate: number
                paymentInfo: Payment
                status: number
                createDate: number
                updateDate: number
            }
        ]

+ Response 400 (application/json) 

        
        // invalid-argument -> data not enough
        {
            message: 'lack of userId'
        }

+ Response 409 (application/json) 

        {
            message: "This User doesn't exist"
        }

           